@using System
@using System.Linq
@using Sandbox;
@inherits PanelComponent
@namespace Facepunch.Arena

@if ( !LocalPlayer.IsValid() ) return;

<root>
	@{
		//var weapon = LocalPlayer.Weapons.Deployed;
	}
	
	@if (LocalPlayer.Currencies.IsValid())
	{
		<div class="ammo">
			@{
				var totalDollars = LocalPlayer.Currencies.GetBalance(CurrenciesEnum.Dollars) + LocalPlayer.Currencies.GetCurrencyTextSymbol(CurrenciesEnum.Dollars);
				var totalEtokens = LocalPlayer.Currencies.GetBalance(CurrenciesEnum.EToken) + LocalPlayer.Currencies.GetCurrencyTextSymbol(CurrenciesEnum.EToken);
			}
			
			<div class="currency dollar">
                <label>@totalDollars</label>
            </div>
            <div class="currency etoken">
                <label>@totalEtokens</label>
            </div>
		</div>
	}
	
	<div class="center">
		<div class="crosshair"></div>
	</div>

	@if (LocalPlayer.Currencies.IsValid() && LocalPlayer.Enchantments.IsValid())
	{
		<div class="bottom">
			@if (LocalPlayer.Enchantments.hasLoadError || LocalPlayer.Currencies.hasLoadError)
			{
				<div class="loadError">Server is offline, there will be no saving & no loading, trying to reconnect...</div>
			}
		</div>
	}
</root>

@code
{
	private PlayerController LocalPlayer { get; set; }
	
	protected override void OnFixedUpdate()
	{
		if ( !LocalPlayer.IsValid() )
		{
			LocalPlayer = Scene.GetAllComponents<PlayerController>().FirstOrDefault( p => p.Network.Owner == Connection.Local );
		}
	}

	protected override void OnUpdate()
	{
		SetClass( "hitmarker", LocalPlayer.IsValid() && LocalPlayer.LastHitmarkerTime < 0.1f );
	}
	
	protected override int BuildHash() => HashCode.Combine( RealTime.Now );
}
